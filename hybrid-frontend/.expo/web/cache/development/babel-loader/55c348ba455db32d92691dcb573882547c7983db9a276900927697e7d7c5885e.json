{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"transform\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createForOfIteratorHelperLoose(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (t) return (t = t.call(r)).next.bind(t); if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var o = 0; return function () { return o >= r.length ? { done: !0 } : { done: !1, value: r[o++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nimport { AnimationsData, TransitionType } from \"./config\";\nimport { convertAnimationObjectToKeyframes } from \"./animationParser\";\nimport { LinearTransition } from \"./transition/Linear.web\";\nimport { SequencedTransition } from \"./transition/Sequenced.web\";\nimport { FadingTransition } from \"./transition/Fading.web\";\nimport { JumpingTransition } from \"./transition/Jumping.web\";\nimport { insertWebAnimation } from \"./domUtils\";\nimport { CurvedTransition } from \"./transition/Curved.web\";\nimport { EntryExitTransition } from \"./transition/EntryExit.web\";\nfunction addPxToTransform(transform) {\n  var newTransform = transform.map(function (transformProp) {\n    var newTransformProp = {};\n    for (var _i = 0, _Object$entries = Object.entries(transformProp); _i < _Object$entries.length; _i++) {\n      var _ref = _Object$entries[_i];\n      var _ref2 = _slicedToArray(_ref, 2);\n      var key = _ref2[0];\n      var value = _ref2[1];\n      if ((key.includes('translate') || key.includes('perspective')) && typeof value === 'number') {\n        newTransformProp[key] = value + \"px\";\n      } else {\n        newTransformProp[key] = value;\n      }\n    }\n    return newTransformProp;\n  });\n  return newTransform;\n}\nexport function createCustomKeyFrameAnimation(keyframeDefinitions) {\n  for (var _i2 = 0, _Object$values = Object.values(keyframeDefinitions); _i2 < _Object$values.length; _i2++) {\n    var value = _Object$values[_i2];\n    if (value.transform) {\n      value.transform = addPxToTransform(value.transform);\n    }\n  }\n  var animationData = {\n    name: '',\n    style: keyframeDefinitions,\n    duration: -1\n  };\n  animationData.name = generateNextCustomKeyframeName();\n  var parsedKeyframe = convertAnimationObjectToKeyframes(animationData);\n  insertWebAnimation(animationData.name, parsedKeyframe);\n  return animationData.name;\n}\nexport function createAnimationWithInitialValues(animationName, initialValues) {\n  var animationStyle = structuredClone(AnimationsData[animationName].style);\n  var firstAnimationStep = animationStyle['0'];\n  var transform = initialValues.transform,\n    rest = _objectWithoutProperties(initialValues, _excluded);\n  var transformWithPx = addPxToTransform(transform);\n  if (transform) {\n    if (!firstAnimationStep.transform) {\n      firstAnimationStep.transform = transformWithPx;\n    } else {\n      var transformStyle = new Map();\n      for (var _iterator = _createForOfIteratorHelperLoose(firstAnimationStep.transform), _step; !(_step = _iterator()).done;) {\n        var rule = _step.value;\n        for (var _i3 = 0, _Object$entries2 = Object.entries(rule); _i3 < _Object$entries2.length; _i3++) {\n          var _ref6 = _Object$entries2[_i3];\n          var _ref7 = _slicedToArray(_ref6, 2);\n          var property = _ref7[0];\n          var value = _ref7[1];\n          transformStyle.set(property, value);\n        }\n      }\n      for (var _iterator2 = _createForOfIteratorHelperLoose(transformWithPx), _step2; !(_step2 = _iterator2()).done;) {\n        var _rule = _step2.value;\n        for (var _i4 = 0, _Object$entries3 = Object.entries(_rule); _i4 < _Object$entries3.length; _i4++) {\n          var _ref8 = _Object$entries3[_i4];\n          var _ref9 = _slicedToArray(_ref8, 2);\n          var _property = _ref9[0];\n          var _value = _ref9[1];\n          transformStyle.set(_property, _value);\n        }\n      }\n      firstAnimationStep.transform = Array.from(transformStyle, function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n          property = _ref4[0],\n          value = _ref4[1];\n        return _defineProperty({}, property, value);\n      });\n    }\n  }\n  animationStyle['0'] = _objectSpread(_objectSpread({}, animationStyle['0']), rest);\n  var keyframeName = generateNextCustomKeyframeName();\n  var animationObject = {\n    name: keyframeName,\n    style: animationStyle,\n    duration: AnimationsData[animationName].duration\n  };\n  var keyframe = convertAnimationObjectToKeyframes(animationObject);\n  insertWebAnimation(keyframeName, keyframe);\n  return keyframeName;\n}\nvar customKeyframeCounter = 0;\nfunction generateNextCustomKeyframeName() {\n  return \"REA\" + customKeyframeCounter++;\n}\nexport function TransitionGenerator(transitionType, transitionData) {\n  var transitionKeyframeName = generateNextCustomKeyframeName();\n  var dummyTransitionKeyframeName;\n  var transitionObject;\n  switch (transitionType) {\n    case TransitionType.LINEAR:\n      transitionObject = LinearTransition(transitionKeyframeName, transitionData);\n      break;\n    case TransitionType.SEQUENCED:\n      transitionObject = SequencedTransition(transitionKeyframeName, transitionData);\n      break;\n    case TransitionType.FADING:\n      transitionObject = FadingTransition(transitionKeyframeName, transitionData);\n      break;\n    case TransitionType.JUMPING:\n      transitionObject = JumpingTransition(transitionKeyframeName, transitionData);\n      break;\n    case TransitionType.CURVED:\n      {\n        dummyTransitionKeyframeName = generateNextCustomKeyframeName();\n        var _CurvedTransition = CurvedTransition(transitionKeyframeName, dummyTransitionKeyframeName, transitionData),\n          firstKeyframeObj = _CurvedTransition.firstKeyframeObj,\n          secondKeyframeObj = _CurvedTransition.secondKeyframeObj;\n        transitionObject = firstKeyframeObj;\n        var dummyKeyframe = convertAnimationObjectToKeyframes(secondKeyframeObj);\n        insertWebAnimation(dummyTransitionKeyframeName, dummyKeyframe);\n        break;\n      }\n    case TransitionType.ENTRY_EXIT:\n      transitionObject = EntryExitTransition(transitionKeyframeName, transitionData);\n      break;\n  }\n  var transitionKeyframe = convertAnimationObjectToKeyframes(transitionObject);\n  insertWebAnimation(transitionKeyframeName, transitionKeyframe);\n  return {\n    transitionKeyframeName: transitionKeyframeName,\n    dummyTransitionKeyframeName: dummyTransitionKeyframeName\n  };\n}","map":{"version":3,"names":["_defineProperty","_objectWithoutProperties","_slicedToArray","_excluded","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_createForOfIteratorHelperLoose","Symbol","iterator","call","next","bind","Array","isArray","_unsupportedIterableToArray","done","value","TypeError","a","_arrayLikeToArray","toString","slice","constructor","name","from","test","n","AnimationsData","TransitionType","convertAnimationObjectToKeyframes","LinearTransition","SequencedTransition","FadingTransition","JumpingTransition","insertWebAnimation","CurvedTransition","EntryExitTransition","addPxToTransform","transform","newTransform","map","transformProp","newTransformProp","_i","_Object$entries","entries","_ref","_ref2","key","includes","createCustomKeyFrameAnimation","keyframeDefinitions","_i2","_Object$values","values","animationData","style","duration","generateNextCustomKeyframeName","parsedKeyframe","createAnimationWithInitialValues","animationName","initialValues","animationStyle","structuredClone","firstAnimationStep","rest","transformWithPx","transformStyle","Map","_iterator","_step","rule","_i3","_Object$entries2","_ref6","_ref7","property","set","_iterator2","_step2","_i4","_Object$entries3","_ref8","_ref9","_ref3","_ref4","keyframeName","animationObject","keyframe","customKeyframeCounter","TransitionGenerator","transitionType","transitionData","transitionKeyframeName","dummyTransitionKeyframeName","transitionObject","LINEAR","SEQUENCED","FADING","JUMPING","CURVED","_CurvedTransition","firstKeyframeObj","secondKeyframeObj","dummyKeyframe","ENTRY_EXIT","transitionKeyframe"],"sources":["/Users/diegollull/Desktop/Uandes/8vo_semestre/APPS/ proyecto-del-curso-llull-zarate /hybrid-frontend/node_modules/react-native-reanimated/lib/module/layoutReanimation/web/createAnimation.ts"],"sourcesContent":["'use strict';\n\nimport { AnimationsData, TransitionType } from './config';\nimport type { InitialValuesStyleProps, KeyframeDefinitions } from './config';\nimport { convertAnimationObjectToKeyframes } from './animationParser';\nimport type {\n  AnimationData,\n  ReanimatedWebTransformProperties,\n  TransitionData,\n} from './animationParser';\nimport type { TransformsStyle } from 'react-native';\nimport { LinearTransition } from './transition/Linear.web';\nimport { SequencedTransition } from './transition/Sequenced.web';\nimport { FadingTransition } from './transition/Fading.web';\nimport { JumpingTransition } from './transition/Jumping.web';\nimport { insertWebAnimation } from './domUtils';\nimport { CurvedTransition } from './transition/Curved.web';\nimport { EntryExitTransition } from './transition/EntryExit.web';\n\ntype TransformType = NonNullable<TransformsStyle['transform']>;\n\n// Translate values are passed as numbers. However, if `translate` property receives number, it will not automatically\n// convert it to `px`. Therefore if we want to keep transform we have to add 'px' suffix to each of translate values\n// that are present inside transform.\n//\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction addPxToTransform(transform: TransformType) {\n  type RNTransformProp = (typeof transform)[number];\n\n  // @ts-ignore `existingTransform` cannot be string because in that case\n  // we throw error in `extractTransformFromStyle`\n  const newTransform = transform.map((transformProp: RNTransformProp) => {\n    const newTransformProp: ReanimatedWebTransformProperties = {};\n    for (const [key, value] of Object.entries(transformProp)) {\n      if (\n        (key.includes('translate') || key.includes('perspective')) &&\n        typeof value === 'number'\n      ) {\n        // @ts-ignore After many trials we decided to ignore this error - it says that we cannot use 'key' to index this object.\n        // Sadly it doesn't go away after using cast `key as keyof TransformProperties`.\n        newTransformProp[key] = `${value}px`;\n      } else {\n        // @ts-ignore same as above.\n        newTransformProp[key] = value;\n      }\n    }\n    return newTransformProp;\n  });\n\n  return newTransform;\n}\n\nexport function createCustomKeyFrameAnimation(\n  keyframeDefinitions: KeyframeDefinitions\n) {\n  for (const value of Object.values(keyframeDefinitions)) {\n    if (value.transform) {\n      value.transform = addPxToTransform(value.transform as TransformType);\n    }\n  }\n\n  const animationData: AnimationData = {\n    name: '',\n    style: keyframeDefinitions,\n    duration: -1,\n  };\n\n  animationData.name = generateNextCustomKeyframeName();\n\n  const parsedKeyframe = convertAnimationObjectToKeyframes(animationData);\n\n  insertWebAnimation(animationData.name, parsedKeyframe);\n\n  return animationData.name;\n}\n\nexport function createAnimationWithInitialValues(\n  animationName: string,\n  initialValues: InitialValuesStyleProps\n) {\n  const animationStyle = structuredClone(AnimationsData[animationName].style);\n  const firstAnimationStep = animationStyle['0'];\n\n  const { transform, ...rest } = initialValues;\n  const transformWithPx = addPxToTransform(transform as TransformType);\n\n  if (transform) {\n    // If there was no predefined transform, we can simply assign transform from `initialValues`.\n    if (!firstAnimationStep.transform) {\n      firstAnimationStep.transform = transformWithPx;\n    } else {\n      // Othwerwise we have to merge predefined transform with the one provided in `initialValues`.\n      // To do that, we create `Map` that will contain final transform.\n      const transformStyle = new Map<string, any>();\n\n      // First we assign all of the predefined rules\n      for (const rule of firstAnimationStep.transform) {\n        // In most cases there will be just one iteration\n        for (const [property, value] of Object.entries(rule)) {\n          transformStyle.set(property, value);\n        }\n      }\n\n      // Then we either add new rule, or override one that already exists.\n      for (const rule of transformWithPx) {\n        for (const [property, value] of Object.entries(rule)) {\n          transformStyle.set(property, value);\n        }\n      }\n\n      // Finally, we convert `Map` with final transform back into array of objects.\n      firstAnimationStep.transform = Array.from(\n        transformStyle,\n        ([property, value]) => ({\n          [property]: value,\n        })\n      );\n    }\n  }\n\n  animationStyle['0'] = {\n    ...animationStyle['0'],\n    ...rest,\n  };\n\n  // TODO: Maybe we can extract the logic below into separate function\n  const keyframeName = generateNextCustomKeyframeName();\n\n  const animationObject: AnimationData = {\n    name: keyframeName,\n    style: animationStyle,\n    duration: AnimationsData[animationName].duration,\n  };\n\n  const keyframe = convertAnimationObjectToKeyframes(animationObject);\n\n  insertWebAnimation(keyframeName, keyframe);\n\n  return keyframeName;\n}\n\nlet customKeyframeCounter = 0;\n\nfunction generateNextCustomKeyframeName() {\n  return `REA${customKeyframeCounter++}`;\n}\n\n/**\n * Creates transition of given type, appends it to stylesheet and returns keyframe name.\n *\n * @param transitionType - Type of transition (e.g. LINEAR).\n * @param transitionData - Object containing data for transforms (translateX, scaleX,...).\n * @returns Keyframe name that represents transition.\n */\nexport function TransitionGenerator(\n  transitionType: TransitionType,\n  transitionData: TransitionData\n) {\n  const transitionKeyframeName = generateNextCustomKeyframeName();\n  let dummyTransitionKeyframeName;\n\n  let transitionObject;\n\n  switch (transitionType) {\n    case TransitionType.LINEAR:\n      transitionObject = LinearTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n    case TransitionType.SEQUENCED:\n      transitionObject = SequencedTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n    case TransitionType.FADING:\n      transitionObject = FadingTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n    case TransitionType.JUMPING:\n      transitionObject = JumpingTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n\n    // Here code block with {} is necessary because of eslint\n    case TransitionType.CURVED: {\n      dummyTransitionKeyframeName = generateNextCustomKeyframeName();\n\n      const { firstKeyframeObj, secondKeyframeObj } = CurvedTransition(\n        transitionKeyframeName,\n        dummyTransitionKeyframeName,\n        transitionData\n      );\n\n      transitionObject = firstKeyframeObj;\n\n      const dummyKeyframe =\n        convertAnimationObjectToKeyframes(secondKeyframeObj);\n\n      insertWebAnimation(dummyTransitionKeyframeName, dummyKeyframe);\n\n      break;\n    }\n    case TransitionType.ENTRY_EXIT:\n      transitionObject = EntryExitTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n  }\n\n  const transitionKeyframe =\n    convertAnimationObjectToKeyframes(transitionObject);\n\n  insertWebAnimation(transitionKeyframeName, transitionKeyframe);\n\n  return { transitionKeyframeName, dummyTransitionKeyframeName };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}