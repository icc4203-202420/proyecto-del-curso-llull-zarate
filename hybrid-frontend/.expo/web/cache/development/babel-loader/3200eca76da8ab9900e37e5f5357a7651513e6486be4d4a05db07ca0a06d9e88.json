{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { StackRouter, useNavigationBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Screen } from \"./Screen\";\nimport { useContextKey } from \"../Route\";\nimport { useFilterScreenChildren } from \"../layouts/withLayoutContext\";\nimport { useSortedScreens } from \"../useScreens\";\nexport var NavigatorContext = React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  NavigatorContext.displayName = 'NavigatorContext';\n}\nexport function Navigator(_ref) {\n  var initialRouteName = _ref.initialRouteName,\n    screenOptions = _ref.screenOptions,\n    children = _ref.children,\n    router = _ref.router;\n  var contextKey = useContextKey();\n  var _useFilterScreenChild = useFilterScreenChildren(children, {\n      isCustomNavigator: true,\n      contextKey: contextKey\n    }),\n    screens = _useFilterScreenChild.screens,\n    otherSlot = _useFilterScreenChild.children;\n  var sorted = useSortedScreens(screens != null ? screens : []);\n  if (!sorted.length) {\n    console.warn(\"Navigator at \\\"\" + contextKey + \"\\\" has no children.\");\n    return null;\n  }\n  return React.createElement(QualifiedNavigator, {\n    initialRouteName: initialRouteName,\n    screenOptions: screenOptions,\n    screens: sorted,\n    contextKey: contextKey,\n    router: router\n  }, otherSlot);\n}\nfunction QualifiedNavigator(_ref2) {\n  var initialRouteName = _ref2.initialRouteName,\n    screenOptions = _ref2.screenOptions,\n    children = _ref2.children,\n    screens = _ref2.screens,\n    contextKey = _ref2.contextKey,\n    _ref2$router = _ref2.router,\n    router = _ref2$router === void 0 ? StackRouter : _ref2$router;\n  var _useNavigationBuilder = useNavigationBuilder(router, {\n      id: contextKey,\n      children: screens,\n      screenOptions: screenOptions,\n      initialRouteName: initialRouteName\n    }),\n    state = _useNavigationBuilder.state,\n    navigation = _useNavigationBuilder.navigation,\n    descriptors = _useNavigationBuilder.descriptors,\n    NavigationContent = _useNavigationBuilder.NavigationContent;\n  return React.createElement(NavigatorContext.Provider, {\n    value: {\n      contextKey: contextKey,\n      state: state,\n      navigation: navigation,\n      descriptors: descriptors,\n      router: router\n    }\n  }, React.createElement(NavigationContent, null, children));\n}\nexport function useNavigatorContext() {\n  var context = React.useContext(NavigatorContext);\n  if (!context) {\n    throw new Error('useNavigatorContext must be used within a <Navigator />');\n  }\n  return context;\n}\nexport function useSlot() {\n  var _descriptors$current$, _descriptors$current$2;\n  var context = useNavigatorContext();\n  var state = context.state,\n    descriptors = context.descriptors;\n  var current = state.routes.find(function (route, i) {\n    return state.index === i;\n  });\n  if (!current) {\n    return null;\n  }\n  return (_descriptors$current$ = (_descriptors$current$2 = descriptors[current.key]) == null ? void 0 : _descriptors$current$2.render()) != null ? _descriptors$current$ : null;\n}\nexport function Slot(props) {\n  var contextKey = useContextKey();\n  var context = React.useContext(NavigatorContext);\n  if ((context == null ? void 0 : context.contextKey) !== contextKey) {\n    return React.createElement(Navigator, _objectSpread({}, props), React.createElement(QualifiedSlot, null));\n  }\n  return React.createElement(QualifiedSlot, null);\n}\nexport function QualifiedSlot() {\n  return useSlot();\n}\nexport function DefaultNavigator() {\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(Navigator, null, React.createElement(QualifiedSlot, null)));\n}\nNavigator.Slot = Slot;\nNavigator.useContext = useNavigatorContext;\nNavigator.Screen = Screen;","map":{"version":3,"names":["StackRouter","useNavigationBuilder","React","SafeAreaView","Screen","useContextKey","useFilterScreenChildren","useSortedScreens","NavigatorContext","createContext","process","env","NODE_ENV","displayName","Navigator","_ref","initialRouteName","screenOptions","children","router","contextKey","_useFilterScreenChild","isCustomNavigator","screens","otherSlot","sorted","length","console","warn","createElement","QualifiedNavigator","_ref2","_ref2$router","_useNavigationBuilder","id","state","navigation","descriptors","NavigationContent","Provider","value","useNavigatorContext","context","useContext","Error","useSlot","_descriptors$current$","_descriptors$current$2","current","routes","find","route","i","index","key","render","Slot","props","_objectSpread","QualifiedSlot","DefaultNavigator","style","flex"],"sources":["/Users/diegollull/Desktop/Uandes/8vo_semestre/APPS/ proyecto-del-curso-llull-zarate /hybrid-frontend/node_modules/expo-router/src/views/Navigator.tsx"],"sourcesContent":["import { RouterFactory, StackRouter, useNavigationBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nimport { Screen } from './Screen';\nimport { useContextKey } from '../Route';\nimport { useFilterScreenChildren } from '../layouts/withLayoutContext';\nimport { useSortedScreens } from '../useScreens';\n\ntype NavigatorTypes = ReturnType<typeof useNavigationBuilder>;\n\n// TODO: This might already exist upstream, maybe something like `useCurrentRender` ?\nexport const NavigatorContext = React.createContext<{\n  contextKey: string;\n  state: NavigatorTypes['state'];\n  navigation: NavigatorTypes['navigation'];\n  descriptors: NavigatorTypes['descriptors'];\n  router: RouterFactory<any, any, any>;\n} | null>(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  NavigatorContext.displayName = 'NavigatorContext';\n}\n\nexport type NavigatorProps = {\n  initialRouteName?: Parameters<typeof useNavigationBuilder>[1]['initialRouteName'];\n  screenOptions?: Parameters<typeof useNavigationBuilder>[1]['screenOptions'];\n  children?: Parameters<typeof useNavigationBuilder>[1]['children'];\n  router?: Parameters<typeof useNavigationBuilder>[0];\n};\n\n/** An unstyled custom navigator. Good for basic web layouts */\nexport function Navigator({ initialRouteName, screenOptions, children, router }: NavigatorProps) {\n  const contextKey = useContextKey();\n\n  // Allows adding Screen components as children to configure routes.\n  const { screens, children: otherSlot } = useFilterScreenChildren(children, {\n    isCustomNavigator: true,\n    contextKey,\n  });\n\n  const sorted = useSortedScreens(screens ?? []);\n\n  if (!sorted.length) {\n    console.warn(`Navigator at \"${contextKey}\" has no children.`);\n    return null;\n  }\n\n  return (\n    <QualifiedNavigator\n      initialRouteName={initialRouteName}\n      screenOptions={screenOptions}\n      screens={sorted}\n      contextKey={contextKey}\n      router={router}>\n      {otherSlot}\n    </QualifiedNavigator>\n  );\n}\n\nfunction QualifiedNavigator({\n  initialRouteName,\n  screenOptions,\n  children,\n  screens,\n  contextKey,\n  router = StackRouter,\n}: NavigatorProps & { contextKey: string; screens: React.ReactNode[] }) {\n  const { state, navigation, descriptors, NavigationContent } = useNavigationBuilder(router, {\n    // Used for getting the parent with navigation.getParent('/normalized/path')\n    id: contextKey,\n    children: screens,\n    screenOptions,\n    initialRouteName,\n  });\n\n  return (\n    <NavigatorContext.Provider\n      value={{\n        contextKey,\n        state,\n        navigation,\n        descriptors,\n        router,\n      }}>\n      <NavigationContent>{children}</NavigationContent>\n    </NavigatorContext.Provider>\n  );\n}\n\nexport function useNavigatorContext() {\n  const context = React.useContext(NavigatorContext);\n  if (!context) {\n    throw new Error('useNavigatorContext must be used within a <Navigator />');\n  }\n  return context;\n}\n\nexport function useSlot() {\n  const context = useNavigatorContext();\n\n  const { state, descriptors } = context;\n\n  const current = state.routes.find((route, i) => {\n    return state.index === i;\n  });\n\n  if (!current) {\n    return null;\n  }\n\n  return descriptors[current.key]?.render() ?? null;\n}\n\n/** Renders the currently selected content. */\nexport function Slot(props: Omit<NavigatorProps, 'children'>) {\n  const contextKey = useContextKey();\n  const context = React.useContext(NavigatorContext);\n  // Ensure the context is for the current contextKey\n  if (context?.contextKey !== contextKey) {\n    // Qualify the content and re-export.\n    return (\n      <Navigator {...props}>\n        <QualifiedSlot />\n      </Navigator>\n    );\n  }\n\n  return <QualifiedSlot />;\n}\n\nexport function QualifiedSlot() {\n  return useSlot();\n}\n\nexport function DefaultNavigator() {\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <Navigator>\n        <QualifiedSlot />\n      </Navigator>\n    </SafeAreaView>\n  );\n}\n\nNavigator.Slot = Slot;\nNavigator.useContext = useNavigatorContext;\n\n/** Used to configure route settings. */\nNavigator.Screen = Screen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}