{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadBundleAsync = void 0;\nvar buildUrlForBundle_1 = require(\"./buildUrlForBundle\");\nvar fetchThenEval_1 = require(\"./fetchThenEval\");\nvar pendingRequests = 0;\nfunction loadBundleAsync(bundlePath) {\n  var requestUrl, LoadingView;\n  return _regeneratorRuntime.async(function loadBundleAsync$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        requestUrl = (0, buildUrlForBundle_1.buildUrlForBundle)(bundlePath);\n        if (!(process.env.NODE_ENV === 'production')) {\n          _context.next = 5;\n          break;\n        }\n        return _context.abrupt(\"return\", (0, fetchThenEval_1.fetchThenEvalAsync)(requestUrl));\n      case 5:\n        LoadingView = require(\"../LoadingView\").default;\n        LoadingView.showMessage('Downloading...', 'load');\n        pendingRequests++;\n        return _context.abrupt(\"return\", (0, fetchThenEval_1.fetchThenEvalAsync)(requestUrl).then(function () {\n          if (process.env.NODE_ENV !== 'production') {\n            var HMRClient = require(\"../HMRClient\").default;\n            HMRClient.registerBundle(requestUrl);\n          }\n        }).finally(function () {\n          if (! --pendingRequests) {\n            LoadingView.hide();\n          }\n        }));\n      case 9:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, null, Promise);\n}\nexports.loadBundleAsync = loadBundleAsync;","map":{"version":3,"names":["buildUrlForBundle_1","require","fetchThenEval_1","pendingRequests","loadBundleAsync","bundlePath","requestUrl","LoadingView","_regeneratorRuntime","async","loadBundleAsync$","_context","prev","next","buildUrlForBundle","process","env","NODE_ENV","abrupt","fetchThenEvalAsync","default","showMessage","then","HMRClient","registerBundle","finally","hide","stop","Promise","exports"],"sources":["/Users/diegollull/Desktop/Uandes/8vo_semestre/APPS/ proyecto-del-curso-llull-zarate /hybrid-frontend/node_modules/@expo/metro-runtime/src/async-require/loadBundle.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { buildUrlForBundle } from './buildUrlForBundle';\nimport { fetchThenEvalAsync } from './fetchThenEval';\n// import LoadingView from '../LoadingView';\n\nlet pendingRequests = 0;\n\n/**\n * Load a bundle for a URL using fetch + eval on native and script tag injection on web.\n *\n * @param bundlePath Given a statement like `import('./Bacon')` `bundlePath` would be `Bacon.bundle?params=from-metro`.\n */\nexport async function loadBundleAsync(bundlePath: string): Promise<void> {\n  const requestUrl = buildUrlForBundle(bundlePath);\n\n  if (process.env.NODE_ENV === 'production') {\n    return fetchThenEvalAsync(requestUrl);\n  } else {\n    const LoadingView = require('../LoadingView')\n      .default as typeof import('../LoadingView').default;\n\n    // Send a signal to the `expo` package to show the loading indicator.\n    LoadingView.showMessage('Downloading...', 'load');\n\n    pendingRequests++;\n\n    return fetchThenEvalAsync(requestUrl)\n      .then(() => {\n        if (process.env.NODE_ENV !== 'production') {\n          const HMRClient = require('../HMRClient')\n            .default as typeof import('../HMRClient').default;\n          HMRClient.registerBundle(requestUrl);\n        }\n      })\n      .finally(() => {\n        if (!--pendingRequests) {\n          LoadingView.hide();\n        }\n      });\n  }\n}\n"],"mappings":";;;;;;;AAMA,IAAAA,mBAAA,GAAAC,OAAA;AACA,IAAAC,eAAA,GAAAD,OAAA;AAGA,IAAIE,eAAe,GAAG,CAAC;AAOhB,SAAeC,eAAeA,CAACC,UAAkB;EAAA,IAAAC,UAAA,EAAAC,WAAA;EAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,iBAAAC,QAAA;IAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;MAAA;QAChDP,UAAU,GAAG,IAAAN,mBAAA,CAAAc,iBAAiB,EAACT,UAAU,CAAC;QAAA,MAE5CU,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;UAAAN,QAAA,CAAAE,IAAA;UAAA;QAAA;QAAA,OAAAF,QAAA,CAAAO,MAAA,WAChC,IAAAhB,eAAA,CAAAiB,kBAAkB,EAACb,UAAU,CAAC;MAAA;QAE/BC,WAAW,GAAGN,OAAO,iBAAiB,CAAC,CAC1CmB,OAAkD;QAGrDb,WAAW,CAACc,WAAW,CAAC,gBAAgB,EAAE,MAAM,CAAC;QAEjDlB,eAAe,EAAE;QAAC,OAAAQ,QAAA,CAAAO,MAAA,WAEX,IAAAhB,eAAA,CAAAiB,kBAAkB,EAACb,UAAU,CAAC,CAClCgB,IAAI,CAAC,YAAK;UACT,IAAIP,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;YACzC,IAAMM,SAAS,GAAGtB,OAAO,eAAe,CAAC,CACtCmB,OAAgD;YACnDG,SAAS,CAACC,cAAc,CAAClB,UAAU,CAAC;;QAExC,CAAC,CAAC,CACDmB,OAAO,CAAC,YAAK;UACZ,IAAI,CAAC,GAAEtB,eAAe,EAAE;YACtBI,WAAW,CAACmB,IAAI,EAAE;;QAEtB,CAAC,CAAC;MAAA;MAAA;QAAA,OAAAf,QAAA,CAAAgB,IAAA;IAAA;EAAA,qBAAAC,OAAA;AAAA;AA1BRC,OAAA,CAAAzB,eAAA,GAAAA,eAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}