{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _createForOfIteratorHelperLoose(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (t) return (t = t.call(r)).next.bind(t); if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var o = 0; return function () { return o >= r.length ? { done: !0 } : { done: !1, value: r[o++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, e, o, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), e, o); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(o, t); } : p; }\nimport DiscreteGestureHandler from \"./DiscreteGestureHandler\";\nimport * as NodeManager from \"./NodeManager\";\nimport PressGestureHandler from \"./PressGestureHandler\";\nimport { TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from \"./utils\";\nvar NativeViewGestureHandler = function (_PressGestureHandler) {\n  function NativeViewGestureHandler() {\n    _classCallCheck(this, NativeViewGestureHandler);\n    return _callSuper(this, NativeViewGestureHandler, arguments);\n  }\n  _inherits(NativeViewGestureHandler, _PressGestureHandler);\n  return _createClass(NativeViewGestureHandler, [{\n    key: \"isNative\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"onRawEvent\",\n    value: function onRawEvent(ev) {\n      var _this = this;\n      _superPropGet(NativeViewGestureHandler, \"onRawEvent\", this, 3)([ev]);\n      if (!ev.isFinal) {\n        if (TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({\n          x: ev.deltaX,\n          y: ev.deltaY\n        }), 10)) {\n          if (this.config.disallowInterruption) {\n            var gestures = Object.values(NodeManager.getNodes()).filter(function (gesture) {\n              var handlerTag = gesture.handlerTag,\n                view = gesture.view,\n                isGestureRunning = gesture.isGestureRunning;\n              return handlerTag !== _this.handlerTag && isGestureRunning && gesture instanceof DiscreteGestureHandler && view && _this.view.contains(view);\n            });\n            for (var _iterator = _createForOfIteratorHelperLoose(gestures), _step; !(_step = _iterator()).done;) {\n              var gesture = _step.value;\n              gesture.forceInvalidate(ev);\n            }\n          }\n        }\n      }\n    }\n  }]);\n}(PressGestureHandler);\nexport default NativeViewGestureHandler;","map":{"version":3,"names":["DiscreteGestureHandler","NodeManager","PressGestureHandler","TEST_MIN_IF_NOT_NAN","VEC_LEN_SQ","NativeViewGestureHandler","_PressGestureHandler","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","get","value","onRawEvent","ev","_this","_superPropGet","isFinal","x","deltaX","y","deltaY","config","disallowInterruption","gestures","Object","values","getNodes","filter","gesture","handlerTag","view","isGestureRunning","contains","_iterator","_createForOfIteratorHelperLoose","_step","done","forceInvalidate"],"sources":["/Users/diegollull/Desktop/Uandes/8vo_semestre/APPS/ proyecto-del-curso-llull-zarate /hybrid-frontend/node_modules/react-native-gesture-handler/lib/module/web_hammer/NativeViewGestureHandler.ts"],"sourcesContent":["import DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { HammerInputExt } from './GestureHandler';\nimport * as NodeManager from './NodeManager';\nimport PressGestureHandler from './PressGestureHandler';\nimport { TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\n\nclass NativeViewGestureHandler extends PressGestureHandler {\n  get isNative() {\n    return true;\n  }\n\n  onRawEvent(ev: HammerInputExt) {\n    super.onRawEvent(ev);\n    if (!ev.isFinal) {\n      // if (this.ref instanceof ScrollView) {\n      if (TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({ x: ev.deltaX, y: ev.deltaY }), 10)) {\n        // @ts-ignore FIXME(TS) config type\n        if (this.config.disallowInterruption) {\n          const gestures = Object.values(NodeManager.getNodes()).filter(\n            (gesture) => {\n              const { handlerTag, view, isGestureRunning } = gesture;\n              return (\n                // Check if this gesture isn't self\n                handlerTag !== this.handlerTag &&\n                // Ensure the gesture needs to be cancelled\n                isGestureRunning &&\n                // ScrollView can cancel discrete gestures like taps and presses\n                gesture instanceof DiscreteGestureHandler &&\n                // Ensure a view exists and is a child of the current view\n                view &&\n                // @ts-ignore FIXME(TS) view type\n                this.view.contains(view)\n              );\n            }\n          );\n          // Cancel all of the gestures that passed the filter\n          for (const gesture of gestures) {\n            // TODO: Bacon: Send some cached event.\n            gesture.forceInvalidate(ev);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default NativeViewGestureHandler;\n"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,sBAAP;AAEA,OAAO,KAAKC,WAAZ;AACA,OAAOC,mBAAP;AACA,SAASC,mBAAT,EAA8BC,UAA9B;AAAA,IAEMC,wBAAN,aAAAC,oBAAA;EAAA,SAAAD,yBAAA;IAAAE,eAAA,OAAAF,wBAAA;IAAA,OAAAG,UAAA,OAAAH,wBAAA,EAAAI,SAAA;EAAA;EAAAC,SAAA,CAAAL,wBAAA,EAAAC,oBAAA;EAAA,OAAAK,YAAA,CAAAN,wBAAA;IAAAO,GAAA;IAAAC,GAAA,EACc,SAAAA,IAAA,EAAG;MACb,OAAO,IAAP;IACD;EAAA;IAAAD,GAAA;IAAAE,KAAA,EAED,SAAAC,UAAUA,CAACC,EAAD,EAAqB;MAAA,IAAAC,KAAA;MAC7BC,aAAA,CAAAb,wBAAA,0BAAiBW,EAAjB;MACA,IAAI,CAACA,EAAE,CAACG,OAAR,EAAiB;QAEf,IAAIhB,mBAAmB,CAACC,UAAU,CAAC;UAAEgB,CAAC,EAAEJ,EAAE,CAACK,MAAR;UAAgBC,CAAC,EAAEN,EAAE,CAACO;QAAtB,CAAD,CAAX,EAA6C,EAA7C,CAAvB,EAAyE;UAEvE,IAAI,KAAKC,MAAL,CAAYC,oBAAhB,EAAsC;YACpC,IAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc3B,WAAW,CAAC4B,QAAZ,EAAd,EAAsCC,MAAtC,CACd,UAAAC,OAAD,EAAa;cACX,IAAQC,UAAF,GAAyCD,OAA/C,CAAQC,UAAF;gBAAcC,IAAd,GAAyCF,OAA/C,CAAoBE,IAAd;gBAAoBC,gBAAA,GAAqBH,OAA/C,CAA0BG,gBAAA;cAC1B,OAEEF,UAAU,KAAKf,KAAA,CAAKe,UAApB,IAEAE,gBAFA,IAIAH,OAAO,YAAY/B,sBAJnB,IAMAiC,IANA,IAQAhB,KAAA,CAAKgB,IAAL,CAAUE,QAAV,CAAmBF,IAAnB;YAEH,CAfc,CAAjB;YAkBA,SAAAG,SAAA,GAAAC,+BAAA,CAAsBX,QAAtB,GAAAY,KAAA,IAAAA,KAAA,GAAAF,SAAA,IAAAG,IAAA,GAAgC;cAAA,IAArBR,OAAX,GAAAO,KAAA,CAAAxB,KAAA;cAEEiB,OAAO,CAACS,eAAR,CAAwBxB,EAAxB;YACD;UACF;QACF;MACF;IACF;EAAA;AAAA,EArCoCd,mBAAvC;AAwCA,eAAeG,wBAAf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}