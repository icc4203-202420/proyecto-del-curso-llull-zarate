{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport invariant from 'invariant';\nvar listeners = [];\nexport default {\n  addEventListener: function addEventListener(type, listener) {\n    var _this = this;\n    if (typeof window === 'undefined') {\n      return {\n        remove: function remove() {}\n      };\n    }\n    invariant(type === 'url', \"Linking.addEventListener(): \" + type + \" is not a valid event\");\n    var nativeListener = function nativeListener(nativeEvent) {\n      return listener({\n        url: window.location.href,\n        nativeEvent: nativeEvent\n      });\n    };\n    listeners.push({\n      listener: listener,\n      nativeListener: nativeListener\n    });\n    window.addEventListener('message', nativeListener, false);\n    return {\n      remove: function remove() {\n        _this.removeEventListener(type, listener);\n      }\n    };\n  },\n  removeEventListener: function removeEventListener(type, listener) {\n    if (typeof window === 'undefined') {\n      return;\n    }\n    invariant(type === 'url', \"Linking.addEventListener(): \" + type + \" is not a valid event\");\n    var listenerIndex = listeners.findIndex(function (pair) {\n      return pair.listener === listener;\n    });\n    invariant(listenerIndex !== -1, 'Linking.removeEventListener(): cannot remove an unregistered event listener.');\n    var nativeListener = listeners[listenerIndex].nativeListener;\n    window.removeEventListener('message', nativeListener, false);\n    listeners.splice(listenerIndex, 1);\n  },\n  canOpenURL: function canOpenURL() {\n    return function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", true);\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  getInitialURL: function getInitialURL() {\n    return function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(typeof window === 'undefined')) {\n              _context2.next = 2;\n              break;\n            }\n            return _context2.abrupt(\"return\", '');\n          case 2:\n            return _context2.abrupt(\"return\", window.location.href);\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  openURL: function openURL(url) {\n    return function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            if (typeof window !== 'undefined') {\n              window.location = new URL(url, window.location).toString();\n            }\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  }\n};","map":{"version":3,"names":["invariant","listeners","addEventListener","type","listener","_this","window","remove","nativeListener","nativeEvent","url","location","href","push","removeEventListener","listenerIndex","findIndex","pair","splice","canOpenURL","_callee","_regeneratorRuntime","async","_callee$","_context","prev","next","abrupt","stop","Promise","getInitialURL","_callee2","_callee2$","_context2","openURL","_callee3","_callee3$","_context3","URL","toString"],"sources":["/Users/diegollull/Desktop/Uandes/8vo_semestre/APPS/ proyecto-del-curso-llull-zarate /hybrid-frontend/node_modules/expo-linking/src/ExpoLinking.web.ts"],"sourcesContent":["import invariant from 'invariant';\n\nimport { NativeURLListener, URLListener } from './Linking.types';\n\nconst listeners: { listener: URLListener; nativeListener: NativeURLListener }[] = [];\n\nexport default {\n  addEventListener(type: 'url', listener: URLListener): { remove(): void } {\n    // Do nothing in Node.js environments\n    if (typeof window === 'undefined') {\n      return { remove() {} };\n    }\n\n    invariant(type === 'url', `Linking.addEventListener(): ${type} is not a valid event`);\n    const nativeListener: NativeURLListener = (nativeEvent) =>\n      listener({ url: window.location.href, nativeEvent });\n    listeners.push({ listener, nativeListener });\n    window.addEventListener('message', nativeListener, false);\n    return {\n      remove: () => {\n        this.removeEventListener(type, listener);\n      },\n    };\n  },\n\n  removeEventListener(type: 'url', listener: URLListener): void {\n    // Do nothing in Node.js environments\n    if (typeof window === 'undefined') {\n      return;\n    }\n    invariant(type === 'url', `Linking.addEventListener(): ${type} is not a valid event`);\n    const listenerIndex = listeners.findIndex((pair) => pair.listener === listener);\n    invariant(\n      listenerIndex !== -1,\n      'Linking.removeEventListener(): cannot remove an unregistered event listener.'\n    );\n    const nativeListener = listeners[listenerIndex].nativeListener;\n    window.removeEventListener('message', nativeListener, false);\n    listeners.splice(listenerIndex, 1);\n  },\n\n  async canOpenURL(): Promise<boolean> {\n    // In reality this should be able to return false for links like `chrome://` on chrome.\n    return true;\n  },\n\n  async getInitialURL(): Promise<string> {\n    if (typeof window === 'undefined') return '';\n    return window.location.href;\n  },\n\n  async openURL(url: string): Promise<void> {\n    if (typeof window !== 'undefined') {\n      // @ts-ignore\n      window.location = new URL(url, window.location).toString();\n    }\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}